pipeline {
  agent {
    node {
      label 'jenkins-slave1'
    }
  }
  stages {
    stage('Maven Build') {
      steps {
        sh 'mvn clean package'
      }
    }
    stage('Quality Check of codes with SonarQube') {
      steps {
      	withSonarQubeEnv('sonarqube-8.9.10') { 
	  sh "mvn sonar:sonar"
	}
      }
    }
    stage('Push the Artifact into Nexus') {
      steps {
      	nexusArtifactUploader artifacts: [
			[
				artifactId: 'DevOpsDemo', 
				classifier: '', 
				file: 'target/DevOpsDemo.war', 
				type: 'war'
			]
	], 
	credentialsId: 'nexus_user', 
	groupId: 'com.blazeclan', 
	nexusUrl: '172.31.36.26:8081', 
	nexusVersion: 'nexus3', 
	protocol: 'http', 
	repository: 'mavenhosted_repo', 
	version: '0.0.1-SNAPSHOT'
      }
    }
    stage('Pull the Artifact from Nexus and Deploy on Production') {
      agent any
      steps {
      	sh 'wget --user=admin --password=nexus http://172.31.36.26:8081/repository/mavenhosted_repo/com/blazeclan/DevOpsDemo/0.0.1-SNAPSHOT/DevOpsDemo-0.0.1-20221209.030419-3.war -O MyDevOpsApp.war'
	deploy adapters: [
		tomcat9(credentialsId: 'tomcat_new', 
		path: '', 
		url: 'http://172.31.11.230:8080')
	], 
	contextPath: 'MyDevOpsApp', 
	war: '**/*.war'
      }
    }
  }
    post {
    always{
      slackSend channel: '#builds',color: 'good', message: 'Build is success', teamDomain: 'blazeclan-7ep8773', tokenCredentialId: 'rQVTJqJjUh4hklojDB8m53o2'
	deleteDir()
      }
   }
}
